#include<stdio.h>
#include<stdlib.h>
int main()
{
    int i, n, time, remain, flag=0, quantum, wt=0, tat=0;
    int *at, *bt, *rt, *ct;
    printf("Enter the number of processes: ");
    scanf("%d",&n);
    at = (int*)malloc(n * sizeof(int));
    bt = (int*)malloc(n * sizeof(int));
    rt = (int*)malloc(n * sizeof(int));
    ct = (int*)malloc(n * sizeof(int));
    remain=n;
    for(i=0;i<n;i++)
    {
        printf("Enter arrival time and burst time for process %d: ",i+1);
        scanf("%d%d",&at[i],&bt[i]);
        rt[i]=bt[i];
    }
    printf("Enter the time quantum: ");
    scanf("%d",&quantum);
    printf("\n\nProcess\t|Completion Time|Turnaround Time|Waiting Time\n\n");
    for(time=0,i=0;remain!=0;)
    {
        if(rt[i]<=quantum && rt[i]>0)
        {
            time+=rt[i];
            rt[i]=0;
            flag=1;
        }
        else if(rt[i]>0)
        {
            rt[i]-=quantum;
            time+=quantum;
        }
        if(rt[i]==0 && flag==1)
        {
            remain--;
            ct[i] = time; // calculate completion time of the process
            printf("P[%d]\t|\t%d\t|\t%d\t|\t%d\n",i+1, ct[i], ct[i]-at[i], ct[i]-at[i]-bt[i]);
            wt+=ct[i]-at[i]-bt[i];
            tat+=ct[i]-at[i];
            flag=0;
        }
        if(i==n-1)
            i=0;
        else if(at[i+1]<=time)
            i++;
        else
            i=0;
    }
    printf("\nAverage Waiting Time: %f\nAverage Turnaround Time: %f",(float)wt/n,(float)tat/n);
    free(at);
    free(bt);
    free(rt);
    free(ct);
    return 0;
}